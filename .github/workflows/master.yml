name: Master

on:
  push:
    branches:
      - f

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    # Decrypt files..
    - run: openssl aes-256-cbc -k "${SUPER_SECRET_PASSWORD}" -pbkdf2 -md md5 -in credentials/tracker-184b3-firebase.json.enc -out credentials/tracker-184b3-firebase.json -d
      env:
        SUPER_SECRET_PASSWORD: ${{ secrets.SUPER_SECRET_PASSWORD }}

    - run: openssl aes-256-cbc -k "${SUPER_SECRET_PASSWORD}" -pbkdf2 -md md5 -in credentials/mongodb.connect.url.js.enc -out credentials/mongodb.connect.url.js -d
      env:
        SUPER_SECRET_PASSWORD: ${{ secrets.SUPER_SECRET_PASSWORD }}

    - run: npm install
    - run: npm run build --if-present
    - run: npm test
    - run: npm run coverage
      env:
        CI: true
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_key: ${{ secrets.OWNER }}

    # Angular project ... you choose
    - run: |
        echo "Angular Project.."
        git clone https://github.com/mchirico/angular.git
        cd angular
        npm install
        rm -rf ../dist
        yes no|./node_modules/.bin/ng build --outputPath=../dist --prod  --outputHashing=all
        cd ../
        rm -rf angular


    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
        gcloud components update --quiet

    - run: |
        gcloud config set gcloudignore/enabled false --project pigdevonlyx
        gcloud builds submit --tag gcr.io/pigdevonlyx/nodecloud --project pigdevonlyx --timeout 35m23s
        gcloud run deploy nodecloud --image gcr.io/pigdevonlyx/nodecloud \
              --platform managed --allow-unauthenticated --project pigdevonlyx \
              --region us-east1 --port 3000 --max-instances 3  --memory 128Mi


    # BigQuery
    - name: Working with BigQuery
      run: |
       txt="master push " 
       bq query --nouse_legacy_sql 'CREATE TABLE IF NOT EXISTS  `pigdevonlyx.github.log` (msg string, timeEnter timestamp);'
       bq query --nouse_legacy_sql  --parameter=MSG:STRING:"${txt}"  'insert into `pigdevonlyx.github.log` (msg,timeEnter) values (@MSG,CURRENT_TIMESTAMP())'




